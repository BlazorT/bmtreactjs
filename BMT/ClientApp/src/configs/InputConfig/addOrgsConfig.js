// userFormConfig.js

import {
  cilEnvelopeClosed,
  cilFlagAlt,
  cilInfo,
  cilScreenSmartphone,
  cilUser,
} from '@coreui/icons';
//import { CFormCheck } from '@coreui/react';
import dayjs from 'dayjs';
import utc from 'dayjs/plugin/utc';
import CustomInput from 'src/components/InputsComponent/CustomInput';
import CustomSelectInput from 'src/components/InputsComponent/CustomSelectInput';
//import CustomDatePicker from 'src/components/UI/DatePicker';
import ImagePicker from 'src/components/UI/ImagePicker';
//import { generateRandomNumbers } from 'src/helpers/generatePassowrd';
import globalutil from 'src/util/globalutil';
dayjs.extend(utc);

export const getDaAppllyInputs = (
  daUserData,
  handleUserInput,
  emailMessage,
  canAdd,
  onBlur,
  cityList,
) => [
  {
    component: ImagePicker,
    image: daUserData.avatar,
    name: 'avatar',
    onChange: (e) => handleUserInput(e, 'avatar'),
  },
  {
    component: CustomInput,
    label: ' Name',
    value: daUserData.name,
    onChange: handleUserInput,
    icon: cilUser,
    type: 'text',
    id: 'name',
    name: 'name',
    placeholder: 'Name Of Organization ex. BMT,Alexa etc',
    className: 'form-control item',
    isRequired: true,
    maxLength: 20,
    // pattern: '.*[A-Z].*',
    autoFocus: true,
    disabled: canAdd === 0,
    message: 'Enter Organization Name',
  },

  {
    component: CustomInput,
    label: 'Email Address',
    value: daUserData.email,
    onChange: handleUserInput,
    icon: cilEnvelopeClosed,
    type: 'email',
    id: 'email',
    name: 'email',
    placeholder: 'Email Address e.g. john***deody@gmail.com',
    className: 'form-control item',
    isRequired: true,
    onBlur: onBlur,
    // pattern: '.*[A-Z].*',
    message: emailMessage,
    // onClick: handleFocus,
    disabled: canAdd === 0,
    // readOnly: emailReadonly,
  },
  {
    component: CustomInput,
    label: 'Contact',
    value: daUserData.contact,
    onChange: handleUserInput,
    icon: cilScreenSmartphone,
    type: 'tel',
    id: 'contact',
    name: 'contact',
    placeholder: 'Contact,+1(973) 2345XXX1',
    className: 'form-control item',
    isRequired: true,
    maxLength: 14,
    // pattern: '[0-9]{3}[0-9]{3}[0-9]{4}',
    message: 'Enter valid contact number Format: 1234567890',
    disabled: canAdd === 0,
  },

  {
    component: CustomSelectInput,
    label: 'Status',
    icon: cilInfo,
    id: 'status',
    options: globalutil.statuses(),
    className: 'form-control item form-select',
    value: daUserData.status,
    name: 'status',
    onChange: (e) => handleUserInput(e),
    isRequired: true,
    disabled: canAdd === 0,
    disableOption: 'Select Status',
    message: 'Please select status',
  },

  {
    component: CustomInput,
    label: ' Address',
    value: daUserData.mailAddress,
    onChange: handleUserInput,
    icon: cilUser,
    type: 'text',
    id: 'mailAddress',
    name: 'mailAddress',
    placeholder: 'Surface / mailing address',
    className: 'form-control item',
  },
  {
    component: CustomInput,
    label: ' IBAN | Wire Transfer ID',
    value: daUserData.ibanorWireTransferId,
    onChange: handleUserInput,
    icon: cilUser,
    type: 'text',
    id: 'ibanorWireTransferId',
    name: 'ibanorWireTransferId',
    placeholder: 'IBAN or Wire Transfer ID e.g. (123*****)',
    className: 'form-control item',
  },
  {
    component: CustomInput,
    label: ' WhatsApp',
    value: daUserData.whatsapp,
    onChange: handleUserInput,
    icon: cilUser,
    type: 'text',
    id: 'whatsapp',
    name: 'whatsapp',
    placeholder: 'WhatsApp,+1(973) 2345XXX1',
    className: 'form-control item',
  },
  {
    component: CustomInput,
    label: ' Instagram',
    value: daUserData.instagram,
    onChange: handleUserInput,
    icon: cilUser,
    type: 'text',
    id: 'instagram',
    name: 'instagram',
    placeholder: 'instagram id',
    className: 'form-control item',
  },
  {
    component: CustomInput,
    label: ' Facebook',
    value: daUserData.fb,
    onChange: handleUserInput,
    icon: cilUser,
    type: 'text',
    id: 'fb',
    name: 'fb',
    placeholder: 'Facebook ID, ex 1099XXXXXXXXXX',
    className: 'form-control item',
  },
  {
    component: CustomSelectInput,
    label: 'Payment Currency',
    icon: cilInfo,
    id: 'currencyId',
    options: globalutil.currencies(),
    className: 'form-control item form-select',
    value: daUserData.currencyId,
    name: 'currencyId',
    onChange: (e) => handleUserInput(e),
    isRequired: false,
    disabled: canAdd === 0,
    disableOption: 'Select currency',
    message: 'Please select currency',
  },
  {
    component: CustomSelectInput,
    label: 'State',
    icon: cilFlagAlt,
    id: 'country',
    options: globalutil.states(),
    className: 'form-control item form-select',
    value: daUserData.country,
    name: 'country',
    onChange: (e) => handleUserInput(e),
    isRequired: false,
    disableOption: 'Select Country',
    message: 'Please select your country',
  },
  {
    component: CustomSelectInput,
    label: 'City',
    icon: cilFlagAlt,
    id: 'cityId',
    className: 'form-control item form-select',
    value: daUserData.cityId,
    name: 'cityId',
    onChange: (e) => handleUserInput(e),
    isRequired: false,
    disableOption: daUserData.country === '' ? 'Select Country First' : 'Select City',
    message: 'Please select your city',
    options: cityList,
  },
  {
    component: CustomInput,
    label: 'Strength',
    value: daUserData.strength,
    onChange: handleUserInput,
    icon: cilUser,
    type: 'text',
    id: 'strength',
    name: 'strength',
    placeholder: 'No. Of Employees',
    className: 'form-control item',
  },
];

export const getInitialDaData = (user) => ({
  id: 0,
  currencyId: 1,
  stateId: 1,
  cityId: 1,
  rowVer: 1,
  avatar: '',
  name: '',
  userCode: '',
  contact: '',
  email: '',
  whatsapp: '',
  instagram: '',
  fb: '',
  ibanorWireTransferId: '',
  // orgId: user.orgId,
  status: 1,
  strength: 0,
  genderId: 1,
  isTermsAccepted: false,
  mailAddress: '',
  paymentDetailId: 0,
  createdAt: dayjs().utc().format(),
  registrationTime: dayjs().utc().format(),
  lastUpdatedAt: dayjs().utc().format(),
  createdBy: user.userId,
  lastUpdatedBy: user.userId,
});
export const getInitialDaIdentificationData = () => ({
  ssnCountry: '',
  idCountry: '',
  bCertificateCountry: '',
  ssnState: '',
  idState: '',
  bCertificateState: '',
  ssnNo: '',
  ssnFront: '',
  ssnBack: '',
  idNo: '',
  idFront: '',
  idBack: '',
  bCertificateNo: '',
  bCertificateFile: '',
  additionalInfo: '',
});
