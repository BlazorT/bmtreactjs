/* eslint-disable react/react-in-jsx-scope */
// userFormConfig.js

import {
  cilUser,
  cilEnvelopeClosed,
  cilScreenSmartphone,
  cilFlagAlt,
  cilInfo,
} from '@coreui/icons';
import { CFormCheck } from '@coreui/react';
import moment from 'moment';
import CustomInput from 'src/components/InputsComponent/CustomInput';
import CustomSelectInput from 'src/components/InputsComponent/CustomSelectInput';
import ImagePicker from 'src/components/UI/ImagePicker';
import globalutil from 'src/util/globalutil';

export const getDaDspsRegisterInputs = (
  daUserData,
  handleUserInput,
  TermsModal,
  emailMessage,
  onBlur,
) => [
  {
    component: ImagePicker,
    image: daUserData.logoPath,
    name: 'avatar',
    onChange: (e) => handleUserInput(e, 'logoPath'),
  },
  {
    component: CustomInput,
    label: 'Name',
    value: daUserData.name,
    onChange: handleUserInput,
    icon: cilUser,
    type: 'text',
    id: 'name',
    name: 'name',
    placeholder: 'Name',
    className: 'form-control item',
    isRequired: true,
    maxLength: 20,
    // pattern: '.*[A-Z].*',
    message: 'Enter First Name',
    autoFocus: true,
  },
  {
    component: CustomInput,
    label: 'Buisness Name',
    value: daUserData.tradeName,
    onChange: handleUserInput,
    icon: cilUser,
    type: 'text',
    id: 'tradeName',
    name: 'tradeName',
    placeholder: 'Combination of first,middle & last name',
    className: 'form-control item',
    isRequired: true,
    // maxLength: 10,
    // pattern: '.*[A-Z].*',
    message: 'Enter Buisness Name',
  },
  {
    component: CustomInput,
    label: 'Email Address',
    value: daUserData.email,
    onChange: handleUserInput,
    icon: cilEnvelopeClosed,
    type: 'email',
    id: 'email',
    name: 'email',
    placeholder: 'Email Address',
    className: 'form-control item',
    isRequired: true,
    // pattern: '[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+.[a-zA-Z]{2,}',
    message: emailMessage,
    onBlur: onBlur,
    // onClick: handleFocus,
    // readOnly: emailReadonly,
  },
  {
    component: CustomInput,
    label: 'Contact',
    value: daUserData.contact,
    onChange: handleUserInput,
    icon: cilScreenSmartphone,
    type: 'number',
    id: 'contact',
    name: 'contact',
    placeholder: 'Contact',
    className: 'form-control item',
    isRequired: true,
    // maxLength: 10,
    // pattern: '.*[A-Z].*',
    message: 'Enter Contact',
  },
 
  {
    component: CustomInput,
    label: 'Web Address',
    value: daUserData.webAddress,
    onChange: handleUserInput,
    icon: cilUser,
    type: 'text',
    id: 'webAddress',
    name: 'webAddress',
    placeholder: 'Enter Web Address',
    className: 'form-control item',
    isRequired: false,

    // pattern: '.*[A-Z].*',
    message: 'Enter Web Address',
  },
  {
    component: CustomSelectInput,
    label: 'Country',
    icon: cilFlagAlt,
    id: 'country',
    //options: globalutil.countries(),
    className: 'form-control item form-select',
    value: daUserData.country,
    name: 'country',
    onChange: (e) => handleUserInput(e),
    isRequired: true,
    disableOption: 'Select Country',
    message: 'Please select your country',
  },
  {
    component: CustomSelectInput,
    label: 'State / Province',
    icon: cilFlagAlt,
    id: 'stateId',
    className: 'form-control item form-select',
    value: daUserData.stateId,
    name: 'stateId',
    onChange: (e) => handleUserInput(e),
    isRequired: true,
    disableOption: daUserData.country === '' ? 'Select Country First' : 'Select State',
    message: 'Please select your state',
    options:
      daUserData.country === ''
        ? []
        : daUserData.country == 1
        ? globalutil.states().slice(0, 50)
        : globalutil.states().slice(50),
  },
  {
    component: CustomSelectInput,
    label: 'Status',
    icon: cilInfo,
    id: 'status',
    options: globalutil.statuses(),
    className: 'form-control item form-select',
    value: daUserData.status,
    name: 'status',
    onChange: (e) => handleUserInput(e),
    isRequired: false,
    disableOption: 'Select Status',
    message: 'Please select user status',
  },
  {
    component: CustomSelectInput,
    label: 'Buisness Type',
    icon: cilFlagAlt,
    id: 'businessTypeId',
    //options: globalutil.businesstypes(),
    className: 'form-control item form-select',
    value: daUserData.businessTypeId,
    name: 'businessTypeId',
    onChange: (e) => handleUserInput(e),
    isRequired: true,
    disableOption: 'Select Buisness Type',
    message: 'Please select buisness type',
  },
  {
    component: CustomInput,
    label: 'Mailing Address',
    value: daUserData.surfaceAddress,
    onChange: handleUserInput,
    icon: cilUser,
    type: 'text',
    id: 'surfaceAddress',
    name: 'surfaceAddress',
    placeholder: 'Enter Mailing Address',
    className: 'form-control item',
  },
];
export const getInitialDspData = (user) => ({
  id: 0,
  logoPath: '',
  name: '',
  tradeName: '',
  contact: '',
  email: '',
  isWhatsappAsso: false,
  country: '',
  stateId: '',
  status: 1,
  webAddress: '',
  surfaceAddress: '',
  businessTypeId: '',
  isTermsAccepted: false,
  createdBy: user.userId,
  lastUpdatedBy: user.userId,
  createdAt: moment().utc().format(),
});
